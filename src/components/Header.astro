---
import { IconButton } from "@camome/core/IconButton";
import { IconSearch, IconSun, IconMoon, IconMenu2 } from "@tabler/icons-react";
import { LOGO_IMAGE, SITE } from "@config";

import logoPNG from "/assets/logo.png";
import logoSVG from "/assets/logo.svg";

export interface Props {
  activeNav?: "posts" | "tags" | "about" | "search";
}

const { activeNav } = Astro.props;

const menuItems: { href: string; label: string }[] = [
  {
    href: "/posts",
    label: "Posts",
  },
  {
    href: "/tags",
    label: "Tags",
  },
  {
    href: "/about",
    label: "About",
  },
];
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={LOGO_IMAGE.svg ? logoSVG : logoPNG}
              alt="AstroPaper Logo"
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <nav>
        <IconButton
          className="hamburger-menu"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
          size="sm"
          variant="ghost"
          colorScheme="neutral"
        >
          <IconMenu2 />
        </IconButton>
        <ul id="menu-items">
          {
            menuItems.map(({ href, label }) => (
              <li>
                <a
                  href={href}
                  class={activeNav === href.replace("/", "") ? "active" : ""}
                >
                  {label}
                </a>
              </li>
            ))
          }
          <li>
            <IconButton
              component="a"
              href="/search"
              aria-label="search"
              title="Search"
              variant="ghost"
              colorScheme="neutral"
              size="sm"
            >
              <IconSearch strokeWidth={2.2} />
            </IconButton>
          </li>
          <li>
            {
              SITE.lightAndDarkMode && (
                <IconButton
                  id="theme-btn"
                  aria-label="Toggle light & dark"
                  variant="ghost"
                  colorScheme="neutral"
                  size="sm"
                >
                  <IconSun strokeWidth={2.2} id="sun-icon" />
                  <IconMoon id="moon-icon" />
                </IconButton>
              )
            }
          </li>
        </ul>
      </nav>
    </div>
  </div>
</header>

<style lang="scss">
  $menu-break-width: 40rem;

  header {
    background: var(--cmm-color-surface-0);
  }
  #skip-to-content {
    position: absolute;
    top: -100%;
    left: 1rem;
    z-index: 50;
    padding: 1rem;
    background: var(--cmm-color-surface-2);
    color: var(--cmm-color-font-base);
    border-radius: var(--cmm-radius-lg);
    font-weight: var(--cmm-font-weight-semibold);
  }
  #skip-to-content:focus {
    top: 1rem;
  }
  .nav-container {
    height: 100%;
    border-bottom: 1px solid var(--cmm-color-border-base);
  }
  .top-nav-wrap {
    display: flex;
    justify-content: space-between;
    padding-block: 1rem;
  }
  .logo {
    line-height: 2rem;
    font-weight: var(--cmm-font-weight-extrabold);
    font-size: var(--cmm-font-size-2xl);

    @media (max-width: $menu-break-width) {
      position: absolute;
    }
  }

  nav {
    display: flex;
    flex-direction: column;

    @media (max-width: $menu-break-width) {
      width: 100%;
    }

    .hamburger-menu {
      display: none;
      align-self: flex-end;
      @media (max-width: $menu-break-width) {
        display: inline-flex;
      }
    }

    ul {
      display: flex;
      align-items: center;
      column-gap: 0.5rem;
      row-gap: 1rem;

      @media (max-width: $menu-break-width) {
        display: none;
        &.open {
          display: flex;
          flex-direction: column;
          width: 100%;
          margin-block-start: 1rem;
        }

        li,
        a,
        :global(.IconButton) {
          width: 100%;
        }
      }

      li a {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        font-weight: var(--cmm-font-weight-bold);
        padding-inline: 0.5em;
        height: 2em;
        border-radius: var(--cmm-radius-md);

        &:hover {
          background: var(--cmm-color-surface-2);
        }

        &.active {
          color: var(--cmm-color-primary-emphasis);
        }
      }
    }
  }
</style>

<style lang="scss" is:global>
  [data-theme="light"] #sun-icon {
    display: none;
  }
  [data-theme="dark"] #moon-icon {
    display: none;
  }
</style>

<script>
  // Toggle menu
  const menuBtn = document.querySelector(".hamburger-menu");
  const menuItems = document.querySelector("#menu-items")?.classList;

  menuBtn?.addEventListener("click", function () {
    const menuExpanded = menuBtn?.getAttribute("aria-expanded");
    if (menuExpanded === "false") {
      menuBtn?.setAttribute("aria-expanded", "true");
      menuBtn?.setAttribute("aria-label", "Close Menu");
      menuItems?.add("open");
    } else {
      menuBtn?.setAttribute("aria-expanded", "false");
      menuBtn?.setAttribute("aria-label", "Open Menu");
      menuItems?.remove("open");
    }
  });
</script>
