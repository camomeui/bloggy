---
import { IconButton } from "@camome/core/IconButton";
import { IconSearch, IconSun, IconMoon } from "@tabler/icons-react";
import { LOGO_IMAGE, SITE } from "@config";

import logoPNG from "/assets/logo.png";
import logoSVG from "/assets/logo.svg";

export interface Props {
  activeNav?: "posts" | "tags" | "about" | "search";
}

const { activeNav } = Astro.props;
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={LOGO_IMAGE.svg ? logoSVG : logoPNG}
              alt="AstroPaper Logo"
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <nav id="nav-menu">
        <button
          class="hamburger-menu focus-outline"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <div class="icon-container flex">
            <div id="first-line"></div>
            <div id="second-line"></div>
            <div id="third-line"></div>
          </div>
        </button>
        <ul id="menu-items" class="display-none sm:flex">
          <li>
            <a href="/posts" class={activeNav === "posts" ? "active" : ""}>
              Posts
            </a>
          </li>
          <li>
            <a href="/tags" class={activeNav === "tags" ? "active" : ""}>
              Tags
            </a>
          </li>
          <li>
            <a href="/about" class={activeNav === "about" ? "active" : ""}>
              About
            </a>
          </li>
          <li>
            <IconButton
              component="a"
              href="/search"
              aria-label="search"
              title="Search"
              variant="ghost"
              colorScheme="neutral"
              size="sm"
            >
              <IconSearch strokeWidth={2.2} />
            </IconButton>
          </li>
          <li>
            {
              SITE.lightAndDarkMode && (
                <IconButton
                  id="theme-btn"
                  className="focus-outline"
                  aria-label="Toggle light & dark"
                  variant="ghost"
                  colorScheme="neutral"
                  size="sm"
                >
                  <IconSun strokeWidth={2.2} id="sun-icon" />
                  <IconMoon id="moon-icon" />
                </IconButton>
              )
            }
          </li>
        </ul>
      </nav>
    </div>
  </div>
</header>

<style lang="scss">
  header {
    height: 4rem;
    background: var(--cmm-color-surface-0);
  }
  #skip-to-content {
    position: absolute;
    top: -100%;
    left: 1rem;
    z-index: 50;
    padding: 0.75rem 0.5rem;
    background: var(--cmm-color-surface-0);
    color: var(--cmm-color-font-base);
  }
  #skip-to-content:focus {
    top: 1rem;
  }
  .nav-container {
    height: 100%;
    border-bottom: 1px solid var(--cmm-color-border-base);
  }
  .top-nav-wrap {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }
  .logo {
    font-weight: var(--cmm-font-weight-extrabold);
    font-size: var(--cmm-font-size-2xl);
  }
  .hamburger-menu {
  }
  .hamburger-menu svg {
  }

  nav {
    display: flex;

    ul {
      display: flex;
      align-items: center;
      gap: 0.5rem;

      li a {
        display: inline-flex;
        justify-content: center;
        align-items: center;
        font-weight: var(--cmm-font-weight-bold);
        padding-inline: 0.5em;
        height: 2em;
        border-radius: var(--cmm-radius-md);

        &:hover {
          background: var(--cmm-color-surface-2);
        }

        &.active {
          color: var(--cmm-color-primary-emphasis);
        }
      }
    }
  }
</style>

<style lang="scss" is:global>
  [data-theme="light"] #sun-icon {
    display: none;
  }
  [data-theme="dark"] #moon-icon {
    display: none;
  }
</style>

<script>
  // Toggle menu
  const menuBtn = document.querySelector(".hamburger-menu");
  const menuItems = document.querySelector("#menu-items")?.classList;

  const iconContainer = document.querySelector(".icon-container")?.classList;
  const firstLine = document.querySelector("#first-line")?.classList;
  const secondLine = document.querySelector("#second-line ")?.classList;
  const thirdLine = document.querySelector("#third-line")?.classList;

  menuBtn?.addEventListener("click", function () {
    const menuExpanded = menuBtn?.getAttribute("aria-expanded");
    if (menuExpanded === "false") {
      menuBtn?.setAttribute("aria-expanded", "true");
      menuBtn?.setAttribute("aria-label", "Close Menu");
      menuItems?.remove("display-none");

      // icon animation
      iconContainer?.remove("flex");
      iconContainer?.add("relative");
      firstLine?.add("rotate-45", "absolute", "bottom-1/2");
      thirdLine?.add("display-none");
      secondLine?.add("!w-full", "-rotate-45", "absolute", "bottom-1/2");
    } else {
      menuBtn?.setAttribute("aria-expanded", "false");
      menuBtn?.setAttribute("aria-label", "Open Menu");
      menuItems?.add("display-none");

      // icon animation
      iconContainer?.add("flex");
      iconContainer?.remove("relative");
      firstLine?.remove("rotate-45", "absolute", "bottom-1/2");
      thirdLine?.remove("display-none");
      secondLine?.remove("!w-full", "-rotate-45", "absolute", "bottom-1/2");
    }
  });
</script>
