---
import { getCollection } from "astro:content";
import { IconButton } from "@camome/core/IconButton";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import { ArrowButtonLink } from "@components/ArrowButtonLink";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import Socials from "@components/Socials";
import getSortedPosts from "@utils/getSortedPosts";
import slugify from "@utils/slugify";
import { SOCIALS } from "@config";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  <main id="main-content" class="stack-8">
    <section id="hero" class="stack">
      <h1>Mingalaba</h1>
      <IconButton
        component="a"
        target="_blank"
        href="/rss.xml"
        aria-label="rss feed"
        title="RSS Feed"
        variant="ghost"
        colorScheme="neutral"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
          ><path
            d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
          ></path><path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
          ></path><circle cx="6" cy="18" r="2"></circle>
        </svg>
      </IconButton>

      <p>
        AstroPaper is a minimal, responsive, accessible and SEO-friendly Astro
        blog theme. This theme follows best practices and provides accessibility
        out of the box. Light and dark mode are supported by default. Moreover,
        additional color schemes can also be configured.
      </p>
      <p>
        Read the blog posts or check
        <a href="https://github.com/satnaing/astro-paper#readme"> README</a> for
        more info.
      </p>
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="social-wrapper">
            <div class="sr-only">Social Links:</div>
            <Socials />
          </div>
        )
      }
    </section>

    <Hr />

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured" class="posts stack">
            <h2>Featured</h2>
            <ul class="stack">
              {featuredPosts.map(({ data }) => (
                <Card
                  href={`/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          <Hr />
        </>
      )
    }

    <section id="recent" class="stack">
      <h2>Recent Posts</h2>
      <ul class="stack">
        {
          sortedPosts.map(
            ({ data }, index) =>
              index < 4 && (
                <Card
                  href={`/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              )
          )
        }
      </ul>
      <ArrowButtonLink direction="next" href="/posts" className="all-posts">
        All posts
      </ArrowButtonLink>
    </section>
  </main>
  <Footer />
</Layout>

<style lang="scss">
  #main-content {
    padding-bottom: 3rem;
  }

  #hero {
    h1 {
      display: inline-block;
      font-size: var(--cmm-font-size-5xl);
      font-weight: var(--cmm-font-weight-extrabold);
    }
  }

  .all-posts {
    margin-block-start: 1.5rem;
  }

  .social-wrapper {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    flex-wrap: wrap;
  }

  h2 {
    font-size: var(--cmm-font-size-2xl);
    font-weight: var(--cmm-font-weight-bold);
  }
</style>
